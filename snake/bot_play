#!/usr/bin/env python3
"""
Let a bot play snake.
"""

import game
import curses_display
import argparse
import bots

def run(num_iterations, num_games, bot_name, display_name, speed):
    with game.Display.create(display_name) as display:
        for i in range(num_iterations):
            for n in range(num_games):
                scores = []
                gm = game.Game()
                bot = bots.Bot.create(bot_name, gm)
                game.run_game_loop(gm, bot, display, speed)
                scores.append(gm.get_score())
            print('Iteration {} of {}: Average score over {} games: {}.'.format(
                i, num_iterations, num_games, sum(scores) / len(scores)))


if __name__ == '__main__':

    available_displays = game.Display.get_available_types()
    available_bots = bots.Bot.get_available_types()

    parser = argparse.ArgumentParser(description=__doc__, formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('-i', '--num-iterations', type=int, default=10, help='number of iterations')
    parser.add_argument('-n', '--num-games', type=int, help='number of games per iteration', default=100)
    parser.add_argument('-s', '--speed', type=float, default=0.0)
    parser.add_argument('-d', '--display', choices=available_displays, default='NoDisplay')
    parser.add_argument('-b', '--bot', choices=available_bots, default='GoTowardsEggBot')
    parser.add_argument('-p', '--profile', action='store_true', help='run profiler')
    args = parser.parse_args()

    try:
        if args.profile:
            import cProfile
            import pstats
            cProfile.run('run(args.num_iterations, args.num_games, args.bot, args.display, args.speed)', 'run.profile')
            stats = pstats.Stats('run.profile')
            stats.strip_dirs().sort_stats('cumtime').print_stats()
        else:
            run(args.num_iterations, args.num_games, args.bot, args.display, args.speed)

    except KeyboardInterrupt:
        pass


